==28804== Memcheck, a memory error detector
==28804== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28804== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28804== Command: ./a.out images/corrupt-testcases/05-big-width-height.ee264 student-out-19_-
==28804== Parent PID: 28803
==28804== 
--28804-- 
--28804-- Valgrind options:
--28804--    --tool=memcheck
--28804--    --leak-check=full
--28804--    --verbose
--28804--    --log-file=memcheck-19.log
--28804-- Contents of /proc/version:
--28804--   Linux version 2.6.32-504.23.4.el6.x86_64 (mockbuild@x86-029.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri May 29 10:16:43 EDT 2015
--28804-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--28804-- Page sizes: currently 4096, max supported 4096
--28804-- Valgrind library directory: /usr/lib64/valgrind
--28804-- Reading syms from /tmp/.LR6FQk/a.out
--28804-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28804--    object doesn't have a dynamic symbol table
--28804-- Reading syms from /lib64/ld-2.12.so
--28804--   Considering /usr/lib/debug/.build-id/5b/eb2450b75e84ff317c65f22af8b8112c25df63.debug ..
--28804--   .. build-id is valid
--28804-- Scheduler: using generic scheduler lock implementation.
--28804-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28804== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28804-by-verma24-on-ecegrid-thin5.ecn.purdue.edu
==28804== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28804-by-verma24-on-ecegrid-thin5.ecn.purdue.edu
==28804== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28804-by-verma24-on-ecegrid-thin5.ecn.purdue.edu
==28804== 
==28804== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28804== don't want to do, unless you know exactly what you're doing,
==28804== or are doing some strange experiment):
==28804==   /usr/lib64/valgrind/../../bin/vgdb --pid=28804 ...command...
==28804== 
==28804== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28804==   /path/to/gdb ./a.out
==28804== and then give GDB the following command
==28804==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28804
==28804== --pid is optional if only one valgrind process is running
==28804== 
--28804-- REDIR: 0x368b8176d0 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28804-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28804-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28804-- REDIR: 0x368b8174e0 (index) redirected to 0x4a07c30 (index)
--28804-- REDIR: 0x368b817560 (strcmp) redirected to 0x4a08570 (strcmp)
--28804-- Reading syms from /lib64/libc-2.12.so
--28804--   Considering /usr/lib/debug/.build-id/c7/df056b7c109a41096296cd70702f2eada124b0.debug ..
--28804--   .. build-id is valid
--28804-- REDIR: 0x368bc84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28804-- REDIR: 0x368bc86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28804-- REDIR: 0x368bc82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--28804-- REDIR: 0x368bc7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28804-- REDIR: 0x368bd28350 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--28804-- REDIR: 0x368bc81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28804-- REDIR: 0x368bd33620 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--28804-- REDIR: 0x368bc8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--28804-- REDIR: 0x368bc84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--28804-- REDIR: 0x368bc7b520 (free) redirected to 0x4a063a9 (free)
--28804-- REDIR: 0x368bc7a640 (malloc) redirected to 0x4a069ac (malloc)
--28804-- REDIR: 0x368bc89670 (memcpy) redirected to 0x4a08b60 (memcpy)
==28804== Warning: set address range perms: large range [0x3aeed040, 0x112eed0a4) (undefined)
==28804== Invalid read of size 1
==28804==    at 0x400C2A: Image_load (answer04.c:108)
==28804==    by 0x401C90: main (<stdin>:61)
==28804==  Address 0x4c3c378 is 0 bytes after a block of size 88 alloc'd
==28804==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==28804==    by 0x400B73: Image_load (answer04.c:90)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== Warning: set address range perms: large range [0x3aeed028, 0x112eed0bc) (noaccess)
--28804-- REDIR: 0x368bc81160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
==28804== Invalid read of size 4
==28804==    at 0x40167C: Image_savebmp (<stdin>:224)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c0 is 0 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== Invalid read of size 4
==28804==    at 0x4016AE: Image_savebmp (<stdin>:229)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c4 is 4 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== Invalid read of size 4
==28804==    at 0x4016F2: Image_savebmp (<stdin>:234)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c0 is 0 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== Invalid read of size 4
==28804==    at 0x4016FE: Image_savebmp (<stdin>:235)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c4 is 4 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== Invalid read of size 4
==28804==    at 0x40171E: Image_savebmp (<stdin>:239)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c4 is 4 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== Warning: silly arg (-100663260) to malloc()
==28804== 
==28804== HEAP SUMMARY:
==28804==     in use at exit: 0 bytes in 0 blocks
==28804==   total heap usage: 5 allocs, 5 frees, 3,623,880,004 bytes allocated
==28804== 
==28804== All heap blocks were freed -- no leaks are possible
==28804== 
==28804== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
==28804== 
==28804== 1 errors in context 1 of 6:
==28804== Invalid read of size 4
==28804==    at 0x40171E: Image_savebmp (<stdin>:239)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c4 is 4 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== 
==28804== 1 errors in context 2 of 6:
==28804== Invalid read of size 4
==28804==    at 0x4016FE: Image_savebmp (<stdin>:235)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c4 is 4 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== 
==28804== 1 errors in context 3 of 6:
==28804== Invalid read of size 4
==28804==    at 0x4016F2: Image_savebmp (<stdin>:234)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c0 is 0 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== 
==28804== 1 errors in context 4 of 6:
==28804== Invalid read of size 4
==28804==    at 0x4016AE: Image_savebmp (<stdin>:229)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c4 is 4 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== 
==28804== 1 errors in context 5 of 6:
==28804== Invalid read of size 4
==28804==    at 0x40167C: Image_savebmp (<stdin>:224)
==28804==    by 0x401DD0: main (<stdin>:92)
==28804==  Address 0x4c3c2c0 is 0 bytes inside a block of size 24 free'd
==28804==    at 0x4A06430: free (vg_replace_malloc.c:446)
==28804==    by 0x400CF7: Image_load (answer04.c:137)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
==28804== 
==28804== 1 errors in context 6 of 6:
==28804== Invalid read of size 1
==28804==    at 0x400C2A: Image_load (answer04.c:108)
==28804==    by 0x401C90: main (<stdin>:61)
==28804==  Address 0x4c3c378 is 0 bytes after a block of size 88 alloc'd
==28804==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==28804==    by 0x400B73: Image_load (answer04.c:90)
==28804==    by 0x401C90: main (<stdin>:61)
==28804== 
--28804-- 
--28804-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28804-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28804== 
==28804== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
