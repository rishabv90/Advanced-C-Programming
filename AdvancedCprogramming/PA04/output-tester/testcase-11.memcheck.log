==46743== Memcheck, a memory error detector
==46743== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==46743== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==46743== Command: ./a.out images/01-smile.ee264 student-out-10_01-smile.bmp
==46743== Parent PID: 46742
==46743== 
--46743-- 
--46743-- Valgrind options:
--46743--    --tool=memcheck
--46743--    --leak-check=full
--46743--    --verbose
--46743--    --log-file=memcheck-10.log
--46743-- Contents of /proc/version:
--46743--   Linux version 2.6.32-504.23.4.el6.x86_64 (mockbuild@x86-029.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri May 29 10:16:43 EDT 2015
--46743-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--46743-- Page sizes: currently 4096, max supported 4096
--46743-- Valgrind library directory: /usr/lib64/valgrind
--46743-- Reading syms from /tmp/.98fEgR/a.out
--46743-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--46743--    object doesn't have a dynamic symbol table
--46743-- Reading syms from /lib64/ld-2.12.so
--46743--   Considering /usr/lib/debug/.build-id/5b/eb2450b75e84ff317c65f22af8b8112c25df63.debug ..
--46743--   .. build-id is valid
--46743-- Scheduler: using generic scheduler lock implementation.
--46743-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==46743== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-46743-by-verma24-on-ecegrid-thin5.ecn.purdue.edu
==46743== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-46743-by-verma24-on-ecegrid-thin5.ecn.purdue.edu
==46743== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-46743-by-verma24-on-ecegrid-thin5.ecn.purdue.edu
==46743== 
==46743== TO CONTROL THIS PROCESS USING vgdb (which you probably
==46743== don't want to do, unless you know exactly what you're doing,
==46743== or are doing some strange experiment):
==46743==   /usr/lib64/valgrind/../../bin/vgdb --pid=46743 ...command...
==46743== 
==46743== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==46743==   /path/to/gdb ./a.out
==46743== and then give GDB the following command
==46743==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=46743
==46743== --pid is optional if only one valgrind process is running
==46743== 
--46743-- REDIR: 0x368b8176d0 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--46743-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--46743-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--46743-- REDIR: 0x368b8174e0 (index) redirected to 0x4a07c30 (index)
--46743-- REDIR: 0x368b817560 (strcmp) redirected to 0x4a08570 (strcmp)
--46743-- Reading syms from /lib64/libc-2.12.so
--46743--   Considering /usr/lib/debug/.build-id/c7/df056b7c109a41096296cd70702f2eada124b0.debug ..
--46743--   .. build-id is valid
--46743-- REDIR: 0x368bc84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--46743-- REDIR: 0x368bc86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--46743-- REDIR: 0x368bc82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--46743-- REDIR: 0x368bc7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--46743-- REDIR: 0x368bd28350 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--46743-- REDIR: 0x368bc81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--46743-- REDIR: 0x368bd33620 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--46743-- REDIR: 0x368bc8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--46743-- REDIR: 0x368bc84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--46743-- REDIR: 0x368bc7b520 (free) redirected to 0x4a063a9 (free)
--46743-- REDIR: 0x368bc7a640 (malloc) redirected to 0x4a069ac (malloc)
--46743-- REDIR: 0x368bc89670 (memcpy) redirected to 0x4a08b60 (memcpy)
==46743== 
==46743== HEAP SUMMARY:
==46743==     in use at exit: 67,032 bytes in 3 blocks
==46743==   total heap usage: 4 allocs, 1 frees, 67,600 bytes allocated
==46743== 
==46743== Searching for pointers to 3 not-freed blocks
==46743== Checked 64,744 bytes
==46743== 
==46743== 67,032 (24 direct, 67,008 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==46743==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==46743==    by 0x400AB3: Image_load (answer04.c:77)
==46743==    by 0x401CA4: main (<stdin>:61)
==46743== 
==46743== LEAK SUMMARY:
==46743==    definitely lost: 24 bytes in 1 blocks
==46743==    indirectly lost: 67,008 bytes in 2 blocks
==46743==      possibly lost: 0 bytes in 0 blocks
==46743==    still reachable: 0 bytes in 0 blocks
==46743==         suppressed: 0 bytes in 0 blocks
==46743== 
==46743== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
--46743-- 
--46743-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--46743-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==46743== 
==46743== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
